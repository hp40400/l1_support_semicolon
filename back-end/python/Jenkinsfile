pipeline {
    //agent { docker { image 'node:16.17.1-alpine' } }
      triggers {
        pollSCM 'H/2 * * * *'
           }
    options {
        disableConcurrentBuilds()
    }
    agent any
    stages {
        stage('build') {
            steps {
            sh 'echo builing....'
            }
        }
        stage('test') {
                        steps {
            sh 'echo testing....'
            }
        }
          stage('deploy') {
                        steps {
            sh 'echo deploying....'
            //sh 'sudo rm /home/ec2-user/my-app/app.js'
            //sh 'sudo pkill node'
            sh 'scp -i mykey app.js ec2-user@35.91.225.44:/home/ec2-user/my-app/'
            
            }
        }      
  /*          when {
                branch 'main'
            }
            steps {
                 dir('back-end/python') {                     
                sh '''
                #API=$(cat ../../../../env)                
                '''
                //sh "cat .env"
                sh 'docker stop backend2 || true'
                sh 'docker rm backend2 || true'
                sh 'docker rmi hp/node-web-app2 || true'
                sh 'docker build -t hp/node-web-app2 .'
                sh 'docker run --name backend2 -p 8082:80 -d hp/node-web-app2'
                 }
            }
            
        } */
    }
}
